git init 初始git
git remote add origin http://xxxx 本地和远程仓库连接
git branch xx     创建分支
git checkout xxx  切换分支

git checkout -b xxx 创建并切换分支
--------------------------------------------------------------------------------
git merge xxx     合并某分支到当前分支（快速合并分支，之后看不出分支信息）

git merge --no-ff -m "描述" <分支> 可以看出分支合并信息


在实际开发中，我们应该按照几个基本原则进行分支管理：

首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；

那在哪干活呢？干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，
再把dev分支合并到master上，在master分支发布1.0版本；

你和你的小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。
---------------------------------------------------------------------------------------------
git branch -d xxx 删除分支

git branch -D xxx 强制删除分支
--------------------------------
git stash    ‘储存工作’

当dev到一半的时候，突然需要改bug，就会暂时git stash  dev到工作区，然后创建bug分支进行整改，
整改完成后，git merge --no--ff -m '' bug分支 ,git branch -d bug分支，bug完成，再接着原来的

git stash pop;
--------------------------------

git push -u origin <分支> 第一次提交到远程仓库的哪个分支

git push origin <分支> 下次可以直接写































